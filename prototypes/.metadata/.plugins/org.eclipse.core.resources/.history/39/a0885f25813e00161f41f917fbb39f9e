package com.kao.src;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.swing.JFrame;
import javax.swing.Timer;

public class Cow implements ActionListener, KeyListener {
	
	public static Cow cow = new Cow();
	public Renderer renderer;
	public static Fighter p1, p2;
	public Milk milk;
	
	public Milk blobA, blobB, blobC;
	
	public int tracker = 0;
	
	public boolean shot = false;
	
	public int width = 700, height = 700;
		
	Milk[] blobs = {blobA, blobB, blobC}; // max is 3 bullets per player

	public Cow() {
		
		Timer timer = new Timer(20, this);
		JFrame jframe = new JFrame("Cow");
		renderer = new Renderer();
		
		jframe.pack(); // used to reposition window
		jframe.setVisible(true);
		jframe.setSize(width, height);
		jframe.setResizable(true);
		jframe.setLocationRelativeTo(null);
		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		jframe.add(renderer);
		jframe.addKeyListener(this);
		
		timer.start();
		start();
	}
	
	public void start() {
		p1 = new Fighter(this, 3);
		
	}
	
	public void render(Graphics2D g) {
		g.setColor(Color.BLACK);
		g.fillRect(0, 0, width, height);
		
		p1.render(g);
		for (int i = 0; i < tracker; i++) {
			blobs[i].render(g);
		}
		
	}
	
	public void update() {
		p1.move();
		for (int i = 0; i < tracker; i++) {
			System.out.println(tracker);
			blobs[i].move();
		}
		
	}

	public static void main(String[] args) throws ScriptException {

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		update();
		renderer.repaint();
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyPressed(KeyEvent e) {
		int id = e.getKeyCode();
		
		if (id == KeyEvent.VK_SPACE) {
			p1.turning = true;
		} else if (id == KeyEvent.VK_A) {
			try {
				blobs[tracker] = new Milk(p1);
			} catch (IndexOutOfBoundsException) {
				
			}
			tracker++;
		}
	}

	@Override
	public void keyReleased(KeyEvent e) {
		int id = e.getKeyCode();
			
		if (id == KeyEvent.VK_SPACE) {
			p1.turning = false;
		}
	}

}
