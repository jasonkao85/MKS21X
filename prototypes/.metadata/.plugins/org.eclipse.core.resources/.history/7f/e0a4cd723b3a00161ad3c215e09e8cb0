package com.kao.src;

import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.Timer;

public class Snake implements ActionListener{

	public JFrame jframe;
	public RenderPanel renderPanel;
	public Timer loopTimer = new Timer(20,(ActionListener) this);
	public static Snake snake;
	
	public ArrayList<Point> snakeParts = new ArrayList<Point>();
	public int ticks = 0, direction = UP;
	public static final int UP = 0, DOWN = 1, LEFT = 2, RIGHT = 3;
	public Point head, cherry;

	public Snake() {
		jframe = new JFrame();
		jframe.pack(); // used to reposition window
		jframe.setVisible(true);
		jframe.setSize(800,600);
		jframe.setResizable(false);
		jframe.setLocationRelativeTo(null); // window opens in the middle
		
		jframe.add(renderPanel = new RenderPanel());
		
		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // enables X button
		
		head = new Point(0,0);
		loopTimer.start(); 
	}
	
	public static void main(String args[]){
		snake = new Snake();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		renderPanel.repaint();
		
		ticks++;
		
		if (ticks % 10 == 0 && head != null){
			if (direction == UP) {
				snakeParts.add(new Point(head.x, head.y-1));
			}
			if (direction == DOWN) {
				snakeParts.add(new Point(head.x, head.y+1));		
			}
			if (direction == LEFT) {
				snakeParts.add(new Point(head.x+1, head.y));
			}
			if (direction == RIGHT) {
				snakeParts.add(new Point(head.x-1, head.y+1));
			}
			i
		}
		
	}
}
